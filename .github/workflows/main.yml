name: Linux

on:
  push:
    branches:
      - "master"
      - "dev-ci"
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-native:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true # Keep enabled as you use LFS

      - name: Install Dependencies (Build + Test)
        run: |
          sudo apt-get update -y
          # Install build tools
          sudo apt-get install -y --no-install-recommends build-essential cmake
          # Install NetCDF libraries
          sudo apt-get install -y --no-install-recommends libnetcdf-dev libnetcdf-c++4-dev
          # Install Python and pip
          sudo apt-get install -y --no-install-recommends python3 python3-pip
          # Install strace for debugging
          sudo apt-get install -y --no-install-recommends strace
          # === ADD ANY OTHER ForeFire build dependencies (e.g. MPI) ===
          # pip install test dependencies
          pip3 install --no-cache-dir lxml xarray netCDF4

      - name: ForeFire build
        run: sudo bash ./install-forefire.sh -y

      - name: Check ForeFire version
        run: ./bin/forefire -v

      - name: Add Build/Runtime Diagnostics
        run: |
          echo "--- ForeFire Linkage ---"
          ldd ./bin/forefire | grep -i 'netcdf' || echo "Warning: NetCDF library not dynamically linked?"
          echo "--- Input data.nc Info ---"
          # Check file size as a basic LFS sanity check
          ls -lh tests/runff/data.nc
          # Install ncdump tool and check the format kind
          sudo apt-get install -y --no-install-recommends netcdf-bin
          ncdump -k tests/runff/data.nc || echo "Could not check data.nc format"

      - name: Run 'runff' Test (with strace Debugging)
        # Use && for safer execution flow
        # Check exit code explicitly
        # Wrap ForeFire call in strace

      - name: Run 'runff' Test (Check Files, No strace)
        run: |
          cd tests/runff
          echo "--- Running ForeFire ---"
          # Run ForeFire normally first
          ../../bin/forefire -i real_case.ff
          FOREFIRE_EXIT_CODE=$?
          echo "--- ForeFire Exited with Code: $FOREFIRE_EXIT_CODE ---"

          echo "--- Listing files in $(pwd) ---"
          ls -la

          # Fail if ForeFire failed
          if [ $FOREFIRE_EXIT_CODE -ne 0 ]; then
            echo "ForeFire failed with exit code $FOREFIRE_EXIT_CODE"
            exit $FOREFIRE_EXIT_CODE
          fi

          # Proceed with verification script only if ForeFire succeeded
          echo "--- Running Verification Script ---"
          bash ff-run.bash